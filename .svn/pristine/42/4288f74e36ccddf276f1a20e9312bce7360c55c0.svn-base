/**
 * @switchMethods
 * 
 * @description :用于测试环境和正式环境的方法切换，而前端方法一致，方便快速开发
 * 
 * @data : 2019-06-05 andy
 * 
 */
import config from '@/config'
import router from '@/router'
//当前是否生成环境/测试环境

//跳转页面
export const turnToPage = (params) => {

    if (config.isRunApp) {
  
      if(params.name.toLowerCase()=='report'||params.name.toLowerCase()=='index'){
        router.push({path: `/${params.name}`, query: {
          keyPathId: params.keyPathId
        }})
        return
      }
     //正式环境
     let slidBackEnabled = params.slidBackEnabled
     //slidBackEnabled =true //测试时，放开
     if(!slidBackEnabled){
      slidBackEnabled =false
     }
     window.api.openWin({
          name: `${params.name}`,
          url: `./${(params.name).toLowerCase()}.html`,
          animation:{
            type:"fade",                //动画类型（详见动画类型常量）fade 交叉淡化过渡（不支持过渡方向）
            subType:"from_right",       //动画子类型（详见动画子类型常量）
            duration:500                //动画过渡时间，默认300毫秒
          },
          reload:true,
          slidBackEnabled,
          pageParam: {
            keyPathId: params.keyPathId,
            pageTitle:params.title
          }
       })
    } else{
     //测试环境 1. this.$router.push() 方法中 path不能和params一起使用，否则params将无效;2.页面通过path和query传递参数
      //router.push(name:`/${params.name}`,params:{})
      router.push({path: `/${params.name}`, query: {
        keyPathId: params.keyPathId,
        pageTitle:params.title
      }})
    }

  }

/**
 * 获取屏幕宽高,返回一个对象
 */
export const getViewportSize = () => {
  debugger
  if (isApp) {
   //正式环境

  } else{
   //测试环境
    let objWH = {
        width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,
        height: window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight
      };
     return objWH
  }

}


