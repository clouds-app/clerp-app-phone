<template>
  <div id="app">
     <headerview title='送货查询' @onClickRight="onClickRight"></headerview>
                    <!--图表数据展示 -->
                     <!-- 其它内存占用高度 -->
                    <div id="otherContent">
                      <van-row  class="body">
                          <deliveryqueryBar style="height:300px;" :value="barData" text="生产报表图"></deliveryqueryBar>
                      </van-row>
                     </div>
                      <van-row  class="body">
                      <!-- <van-cell :border="false" title="主体内容" >
                        <template slot="title"> -->
                           <div class="dataTable">
                              <v-table
                              :height="tableHeight"
                              :title-row-height="24"
                              :row-height="20"
                               title-bg-color="#3296fae0"
                              id="dt_deliveryquery"
                              ref="dt_deliveryquery"
                              is-vertical-resize
                              style="width:100%;"
                              is-horizontal-resize
                              :columns="dataColumns"
                              :table-data="dataSource"
                              :show-vertical-border="true"
                               :error-content="errorContent"
                              even-bg-color="#f4f4f4"
                              row-hover-color="#eee"
                              row-click-color="#edf7ff">
                              </v-table>
                          </div>
                      <!-- </template>
                    </van-cell> -->
                    <van-popup  position="bottom"
                      :style="{ height: 'auto' }" v-model="showSearchForm">
                      <searchForm @handleSearch="handleSearch"></searchForm>
                  </van-popup>
            </van-row>

         <footerview></footerview>
  </div>
</template>
<script>
/**
 * @description  送货查询 deliveryQuery
 */
import moment from 'moment'; 
import {deliveryqueryBar} from '_c/charts/deliveryquery'
import searchForm from '_c/searchForm'
import { getToken, setToken,setLocalStorage,getLocalStorage } from '@/libs/util'
import baseMixin from '@/mixins'
import {mapActions} from 'vuex'
export default {
  name:'deliveryQuery',
  mixins:[baseMixin],
  components:{searchForm,deliveryqueryBar},
   data(){
    return {
      dataWindowH: window.innerHeight || document.body.clientHeight,
      tableHeight: window.innerHeight || document.body.clientHeight,
      barData:[],//图表数据
      errorContent:'数据加载中...',
      showSearchForm:false,
      dataSource:[], //数据源
      searchParams:{  //初始化查询参数
           startDate:'2018-07-10',
           endDate:'2019-07-10',
            ctCode:'',
            token:getToken()
      },
      //数据列描述，格式化
      dataColumns: [
                     {field: 'ct_ID', title:'客户编号', width: 136, titleAlign: 'center',columnAlign:'left',isResize:true,
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.ct_ID}</span>`
                      },},
                      {field: 'ct_Name', title:'客户名称', width: 136, titleAlign: 'center',columnAlign:'left',isResize:true,
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.ct_Name}</span>`
                      },},
                       {field: 'ai_Name', title:'地区', width: 136, titleAlign: 'center',columnAlign:'left',isResize:true,
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.ai_Name}</span>`
                      },},
                       {field: 'w_Name', title:'业务员', width: 136, titleAlign: 'center',columnAlign:'left',isResize:true,
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.w_Name}</span>`
                      },},
                      {field: 'Cube', title:'面积', width: 136, titleAlign: 'center',columnAlign:'right',
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.Cube}</span>`
                      },},
                     {field: 'Area', title:'体积', width: 136, titleAlign: 'center',columnAlign:'right',
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.Area}</span>`
                      },},
                     {field: 'Weight', title:'重量', width: 136, titleAlign: 'center',columnAlign:'right',
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.Weight}</span>`
                      },},
                      {field: 'pdi_Qty', title:'送货数量', width: 136, titleAlign: 'center',columnAlign:'right',
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.pdi_Qty}</span>`
                      },},
                      {field: 'pdi_Money', title:'送货金额', width: 136, titleAlign: 'center',columnAlign:'right',
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.pdi_Money}</span>`
                      },},
                       {field: 'OwnerMoney', title:'本币金额', width: 136, titleAlign: 'center',columnAlign:'right',
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.OwnerMoney}</span>`
                      },},
                      {field: 'MoneyRate', title:'金额%', width: 136, titleAlign: 'center',columnAlign:'right',
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.MoneyRate}</span>`
                      },},
                      {field: 'recordMoney', title:'元/款', width: 136, titleAlign: 'center',columnAlign:'right',
                      formatter: (rowData, index)=>{
                              return `<span">${rowData.recordMoney}</span>`
                      },},
                    ]
    }
  },
 mounted(){
     let _self =this
     this.$nextTick(()=>{
            _self.tableHeight =_self.getLeftHeight()
            //console.log('_self.tableHeight:'+_self.tableHeight)
     })
   },
  created(){
    //  this.searchParams.startDate =moment().add('month', 0).format('YYYY-MM') + '-01'
    //  this.searchParams.endDate =moment().format('YYYY-MM-DD')
    //实例已经在内存中创建OK，此时 data 和 methods 已经创建OK，此时还没有开始 编译模板
    this.getDataSource()
  },
  methods:{
    ...mapActions(['getPaperDeliTotal_action']),
    //获取送货数据
    getDataSource(){
      //根据开始日期(startDate)， 结束日期(endDate) ，客户编号(ctCode)查询送货信息。
      //入参：startDate,endDate,ctCode,token;
        let params= this.searchParams
        let _self =this
        this.getPaperDeliTotal_action(params).then(res=>{
          //debugger
            _self.dataSource =res
            _self.barData = res
              if(_self.dataSource.length==0){
               _self.errorContent='暂无数据'
            }
        }).catch(err=>{
           _self.errorContent='暂无数据'
            _self.$toast('获取数据失败:'+err)
        })
    },
     //显示查询条件框
    onClickRight(){
      this.showSearchForm=true
    },
    //查询参数回调处理
    handleSearch(params){
      //debugger
    if(params && params.startDate!=null){
           this.searchParams =Object.assign(this.searchParams,params)  
          this.getDataSource()
          this.showSearchForm=false
      }
    }
  }
}
</script>

<style lang="less">
#app {
  font-family: 'Avenir', Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  // text-align: center;
  // color: #2c3e50;
}
.table-title {
    color: white;
    // font-weight: bold;
 }
</style>
